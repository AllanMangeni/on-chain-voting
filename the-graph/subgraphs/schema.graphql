type AdminChanged @entity(immutable: true) {
  id: Bytes!
  previousAdmin: Bytes! # address
  newAdmin: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BeaconUpgraded @entity(immutable: true) {
  id: Bytes!
  beacon: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Initialized @entity(immutable: true) {
  id: Bytes!
  version: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Proposal @entity(immutable: false) {
  id: ID!
  proposalId: Int! # uint256
  status: Int! # uint8
  cid: String! # string
  creator: Bytes! # address
  expTime: BigInt! # uint256
  proposalType: BigInt # uint256
  chainId: BigInt! # uint256
  voteListCid: String # string
  voteResults: [VoteResult!] @derivedFrom(field: "proposal") # tuple[]
}

type Upgraded @entity(immutable: true) {
  id: Bytes!
  implementation: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Vote @entity(immutable: false) {
  id: ID!
  proposalId: Int! # uint256
  voteInfo: String! # string
  transactionHash: Bytes!
}
type VoteResult @entity(immutable: false) {
  id: ID!
  proposal: Proposal!
  proposalId: Int!
  optionId: BigInt!
  votes: BigInt!
}
