// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProposalCancel extends ethereum.Event {
  get params(): ProposalCancel__Params {
    return new ProposalCancel__Params(this);
  }
}

export class ProposalCancel__Params {
  _event: ProposalCancel;

  constructor(event: ProposalCancel) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get status(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class ProposalCount extends ethereum.Event {
  get params(): ProposalCount__Params {
    return new ProposalCount__Params(this);
  }
}

export class ProposalCount__Params {
  _event: ProposalCount;

  constructor(event: ProposalCount) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get status(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get voteResult(): Array<ProposalCountVoteResultStruct> {
    return this._event.parameters[2].value.toTupleArray<
      ProposalCountVoteResultStruct
    >();
  }

  get voteListCid(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class ProposalCountVoteResultStruct extends ethereum.Tuple {
  get optionId(): BigInt {
    return this[0].toBigInt();
  }

  get votes(): BigInt {
    return this[1].toBigInt();
  }
}

export class ProposalCreate extends ethereum.Event {
  get params(): ProposalCreate__Params {
    return new ProposalCreate__Params(this);
  }
}

export class ProposalCreate__Params {
  _event: ProposalCreate;

  constructor(event: ProposalCreate) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get status(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get proposal(): ProposalCreateProposalStruct {
    return changetype<ProposalCreateProposalStruct>(
      this._event.parameters[2].value.toTuple()
    );
  }
}

export class ProposalCreateProposalStruct extends ethereum.Tuple {
  get cid(): string {
    return this[0].toString();
  }

  get proposalType(): BigInt {
    return this[1].toBigInt();
  }

  get creator(): Address {
    return this[2].toAddress();
  }

  get expTime(): BigInt {
    return this[3].toBigInt();
  }

  get chainId(): BigInt {
    return this[4].toBigInt();
  }

  get voteListCid(): string {
    return this[5].toString();
  }

  get status(): i32 {
    return this[6].toI32();
  }

  get voteResults(): Array<ProposalCreateProposalVoteResultsStruct> {
    return this[7].toTupleArray<ProposalCreateProposalVoteResultsStruct>();
  }
}

export class ProposalCreateProposalVoteResultsStruct extends ethereum.Tuple {
  get optionId(): BigInt {
    return this[0].toBigInt();
  }

  get votes(): BigInt {
    return this[1].toBigInt();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Vote extends ethereum.Event {
  get params(): Vote__Params {
    return new Vote__Params(this);
  }
}

export class Vote__Params {
  _event: Vote;

  constructor(event: Vote) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get voter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get voteInfo(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class PowerVoting__proposalMapResult {
  value0: string;
  value1: BigInt;
  value2: Address;
  value3: BigInt;
  value4: BigInt;
  value5: string;
  value6: i32;

  constructor(
    value0: string,
    value1: BigInt,
    value2: Address,
    value3: BigInt,
    value4: BigInt,
    value5: string,
    value6: i32
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromString(this.value5));
    map.set(
      "value6",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value6))
    );
    return map;
  }

  getCid(): string {
    return this.value0;
  }

  getProposalType(): BigInt {
    return this.value1;
  }

  getCreator(): Address {
    return this.value2;
  }

  getExpTime(): BigInt {
    return this.value3;
  }

  getChainId(): BigInt {
    return this.value4;
  }

  getVoteListCid(): string {
    return this.value5;
  }

  getStatus(): i32 {
    return this.value6;
  }
}

export class PowerVoting extends ethereum.SmartContract {
  static bind(address: Address): PowerVoting {
    return new PowerVoting("PowerVoting", address);
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proposalMap(param0: BigInt): PowerVoting__proposalMapResult {
    let result = super.call(
      "proposalMap",
      "proposalMap(uint256):(string,uint256,address,uint248,uint256,string,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new PowerVoting__proposalMapResult(
      result[0].toString(),
      result[1].toBigInt(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toString(),
      result[6].toI32()
    );
  }

  try_proposalMap(
    param0: BigInt
  ): ethereum.CallResult<PowerVoting__proposalMapResult> {
    let result = super.tryCall(
      "proposalMap",
      "proposalMap(uint256):(string,uint256,address,uint248,uint256,string,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PowerVoting__proposalMapResult(
        value[0].toString(),
        value[1].toBigInt(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toString(),
        value[6].toI32()
      )
    );
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class CancelProposalCall extends ethereum.Call {
  get inputs(): CancelProposalCall__Inputs {
    return new CancelProposalCall__Inputs(this);
  }

  get outputs(): CancelProposalCall__Outputs {
    return new CancelProposalCall__Outputs(this);
  }
}

export class CancelProposalCall__Inputs {
  _call: CancelProposalCall;

  constructor(call: CancelProposalCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelProposalCall__Outputs {
  _call: CancelProposalCall;

  constructor(call: CancelProposalCall) {
    this._call = call;
  }
}

export class CountCall extends ethereum.Call {
  get inputs(): CountCall__Inputs {
    return new CountCall__Inputs(this);
  }

  get outputs(): CountCall__Outputs {
    return new CountCall__Outputs(this);
  }
}

export class CountCall__Inputs {
  _call: CountCall;

  constructor(call: CountCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get voteResults(): Array<CountCallVoteResultsStruct> {
    return this._call.inputValues[1].value.toTupleArray<
      CountCallVoteResultsStruct
    >();
  }

  get voteListCid(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class CountCall__Outputs {
  _call: CountCall;

  constructor(call: CountCall) {
    this._call = call;
  }
}

export class CountCallVoteResultsStruct extends ethereum.Tuple {
  get optionId(): BigInt {
    return this[0].toBigInt();
  }

  get votes(): BigInt {
    return this[1].toBigInt();
  }
}

export class CreateProposalCall extends ethereum.Call {
  get inputs(): CreateProposalCall__Inputs {
    return new CreateProposalCall__Inputs(this);
  }

  get outputs(): CreateProposalCall__Outputs {
    return new CreateProposalCall__Outputs(this);
  }
}

export class CreateProposalCall__Inputs {
  _call: CreateProposalCall;

  constructor(call: CreateProposalCall) {
    this._call = call;
  }

  get proposalCid(): string {
    return this._call.inputValues[0].value.toString();
  }

  get expTime(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get chainId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get proposalType(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class CreateProposalCall__Outputs {
  _call: CreateProposalCall;

  constructor(call: CreateProposalCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateProposalAllowListCall extends ethereum.Call {
  get inputs(): UpdateProposalAllowListCall__Inputs {
    return new UpdateProposalAllowListCall__Inputs(this);
  }

  get outputs(): UpdateProposalAllowListCall__Outputs {
    return new UpdateProposalAllowListCall__Outputs(this);
  }
}

export class UpdateProposalAllowListCall__Inputs {
  _call: UpdateProposalAllowListCall;

  constructor(call: UpdateProposalAllowListCall) {
    this._call = call;
  }

  get addrList(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class UpdateProposalAllowListCall__Outputs {
  _call: UpdateProposalAllowListCall;

  constructor(call: UpdateProposalAllowListCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}

export class VoteCall extends ethereum.Call {
  get inputs(): VoteCall__Inputs {
    return new VoteCall__Inputs(this);
  }

  get outputs(): VoteCall__Outputs {
    return new VoteCall__Outputs(this);
  }
}

export class VoteCall__Inputs {
  _call: VoteCall;

  constructor(call: VoteCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get voteInfo(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class VoteCall__Outputs {
  _call: VoteCall;

  constructor(call: VoteCall) {
    this._call = call;
  }
}
